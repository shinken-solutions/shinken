define service{
  active_checks_enabled          1
  check_freshness                0
  check_interval                 1
  check_period                   24x7
  contact_groups                 test_contact
  event_handler_enabled          1
  failure_prediction_enabled     1
  flap_detection_enabled         1
  is_volatile                    0
  max_check_attempts             1
  name                           generic-service
  notification_interval          1
  notification_options           w,u,c,r,f,s
  notification_period            24x7
  notifications_enabled          1
  obsess_over_service            1
  parallelize_check              1
  passive_checks_enabled         1
  process_perf_data              1
  register                       0
  retain_nonstatus_information   1
  retain_status_information      1
  retry_interval                 1
}

# Group expansion tests
define service{
  check_command                  check_service!ok
  hostgroup_name                 hostgroup_01
  service_description            srv1
  use                            generic-service
}

define service{
  check_command                  check_service!ok
  hostgroup_name                 hostgroup_02
  service_description            srv2
  use                            generic-service
}

define service{
  check_command                  bp_rule!g:hostgroup_01,srv1
  host_name                      dummy
  service_description            bprule_00
  use                            generic-service
}

define service{
  check_command                  bp_rule!test_host_01,srv1 & test_host_02,srv1
  host_name                      dummy
  service_description            bprule_01
  use                            generic-service
}

define service{
  check_command                  bp_rule!1 of: g:hostgroup_01,srv1
  host_name                      dummy
  service_description            bprule_10
  use                            generic-service
}

define service{
  check_command                  bp_rule!1 of: test_host_01,srv1 & test_host_02,srv1
  host_name                      dummy
  service_description            bprule_11
  use                            generic-service
}

define service{
  check_command                  bp_rule!g:hostgroup_01,srv1 & g:hostgroup_02,srv2
  host_name                      dummy
  service_description            bprule_20
  use                            generic-service
}

define service{
  check_command                  bp_rule!(test_host_01,srv1 & test_host_02,srv1) & (test_host_01,srv2 & test_host_02,srv2)
  host_name                      dummy
  service_description            bprule_21
  use                            generic-service
}

define service{
  check_command                  bp_rule!(g:hostgroup_01,srv1) | (g:hostgroup_02,srv2)
  host_name                      dummy
  service_description            bprule_30
  use                            generic-service
}

define service{
  check_command                  bp_rule!(test_host_01,srv1 & test_host_02,srv1) | (test_host_01,srv2 & test_host_02,srv2)
  host_name                      dummy
  service_description            bprule_31
  use                            generic-service
}

define service{
  check_command                  bp_rule!g:hostgroup_01
  host_name                      dummy
  service_description            bprule_40
  use                            generic-service
}

define service{
  check_command                  bp_rule!test_host_01 & test_host_02
  host_name                      dummy
  service_description            bprule_41
  use                            generic-service
}

# Regex expansion tests
define service{
  check_command                  bp_rule!r:test_host_0[12],srv1
  host_name                      dummy
  service_description            bprule_50
  use                            generic-service
}

define service{
  check_command                  bp_rule!test_host_01,srv1 & test_host_02,srv1
  host_name                      dummy
  service_description            bprule_51
  use                            generic-service
}

define service{
  check_command                  bp_rule!1 of: r:test_host_0[12],srv1
  host_name                      dummy
  service_description            bprule_60
  use                            generic-service
}

define service{
  check_command                  bp_rule!1 of: test_host_01,srv1 & test_host_02,srv1
  host_name                      dummy
  service_description            bprule_61
  use                            generic-service
}

define service{
  check_command                  bp_rule!r:test_host_0[12],srv1 & r:test_host_0[12],srv2
  host_name                      dummy
  service_description            bprule_70
  use                            generic-service
}

define service{
  check_command                  bp_rule!(test_host_01,srv1 & test_host_02,srv1) & (test_host_01,srv2 & test_host_02,srv2)
  host_name                      dummy
  service_description            bprule_71
  use                            generic-service
}

define service{
  check_command                  bp_rule!(r:test_host_0[12],srv1) | (r:test_host_0[12],srv2)
  host_name                      dummy
  service_description            bprule_80
  use                            generic-service
}

define service{
  check_command                  bp_rule!(test_host_01,srv1 & test_host_02,srv1) | (test_host_01,srv2 & test_host_02,srv2)
  host_name                      dummy
  service_description            bprule_81
  use                            generic-service
}

define service{
  check_command                  bp_rule!r:test_host_0[12]
  host_name                      dummy
  service_description            bprule_90
  use                            generic-service
}

define service{
  check_command                  bp_rule!test_host_01 & test_host_02
  host_name                      dummy
  service_description            bprule_91
  use                            generic-service
}

# Business rule macros expansion
define service{
  check_command                  bp_rule!1 of: test_host_01,srv1 & test_host_02,srv2
  host_name                      dummy
  service_description            bprule_no_macro
  use                            generic-service
}

define service{
  check_command                  bp_rule!$_HOSTXOF$ of: test_host_01,srv1 & test_host_02,srv2
  host_name                      dummy
  service_description            bprule_macro_expand
  use                            generic-service
}

# Business rule macros expansion with modulation
define service{
  check_command                  bp_rule!$_HOSTXOF$ of: test_host_01,srv1 & test_host_02,srv2
  host_name                      dummy_modulated
  service_description            bprule_macro_modulated
  use                            generic-service
}
