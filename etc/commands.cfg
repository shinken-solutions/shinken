################################################################################
#  commands.cfg  -  Main commands definition file
#===============================================================================
# This file show sample command definitions which are commonly used to monitor
# systems, websites, databases, etc.
#
# See also "pack/*/*/commands.cfg".
#
# You need the Nagios plugins installed under $PLUGINSDIR$ (see resource.cfg)
# in order to use most of these commands. For your own network you may need
# other plugins, which you can write yourself or find at Nagios Exchange.
#
# This file has three sections for easier reading:
# - Network_checks
# - Host_alive_checks
# - Notification_commands
# (You can use section names to jump there)
#===============================================================================
# Reference: http://www.shinken-monitoring.org/wiki/official/configuringshinken/configobjects/command
# Nagios Plugins: http://www.nagios.org/download/plugins/
# Nagios Exchange (Plugins repository): http://exchange.nagios.org/
################################################################################



################################################################################
# Network_checks
#===============================================================================
# Download:
# - Included in Nagios Plugins.
# - check_nrpe:
# http://exchange.nagios.org/directory/Addons/Monitoring-Agents/NRPE--2D-Nagios-Remote-Plugin-Executor/details
################################################################################

## Check a TCP port
# This plugin tests TCP connections with the specified host (or unix socket).
# check_tcp -H host -p port [-w <warning time>] [-c <critical time>] [-s <send
# string>] [-e <expect string>] [-q <quit string>][-m <maximum bytes>] [-d
# <delay>] [-t <timeout seconds>] [-r <refuse state>] [-M <mismatch state>]
# [-v] [-4|-6] [-j] [-D <warn days cert expire>[,<crit days cert expire>]] [-S
# <use SSL>] [-E]
define command {
    command_name    check_tcp
    command_line    $PLUGINSDIR$/check_tcp -H $HOSTADDRESS$ -p $ARG1$
}


## Check a DNS entry
## This plugin test the DNS service on the specified host using dig
# check_dig -l <query_address> [-H <host>] [-p <server port>] [-T <query type>]
# [-w <warning interval>] [-c <critical interval>] [-t <timeout>] [-a <expected
# answer address>] [-v]
define command {
    command_name    check_dig
    command_line    $PLUGINSDIR$/check_dig -H $HOSTADDRESS$ -l $ARG1$
}


## Check ping command
## Use ping to check connection statistics for a remote host.
# check_ping -H <host_address> -w <wrta>,<wpl>% -c <crta>,<cpl>% [-p packets]
# [-t timeout] [-4|-6]
define command {
    command_name    check_ping
    command_line    $PLUGINSDIR$/check_ping -H $HOSTADDRESS$ -w 3000,100% -c 5000,100% -p 1
}


## Ask a NRPE agent
## Requires that you have the NRPE daemon running on the remote host.
# check_nrpe -H <host> [-n] [-u] [-p <port>] [-t <timeout>] [-c <command>] [-a
# <arglist...>]
define command {
    command_name    check_nrpe
    command_line    $PLUGINSDIR$/check_nrpe -H $HOSTADDRESS$ -t 9 -u -c $ARG1$
}

## Ask a NRPE agent with arguments (passing arguments may be a security risk)
## Requires that you have the NRPE daemon running on the remote host.
# check_nrpe -H <host> [-n] [-u] [-p <port>] [-t <timeout>] [-c <command>] [-a
# <arglist...>]
define command {
    command_name    check_nrpe_args
    command_line    $PLUGINSDIR$/check_nrpe -H $HOSTADDRESS$ -t 9 -u -c $ARG1$ -a $ARG2$ $ARG3$ $ARG4$ $ARG5$
}

# Check SNMP service presence on target
define command {
    command_name   check_snmp_service
    command_line   $PLUGINSDIR$/check_snmp_service -H $HOSTADDRESS$ -C $SNMPCOMMUNITYREAD$
}


# Compare time between target and shinken
# Doc : http://nagios.frank4dd.com/plugins/manual/check_snmp_time.htm
# Plugin : http://nagios.frank4dd.com/plugins/source/check_snmp_time.pl
define command {
    command_name    check_snmp_time
    command_line    $PLUGINSDIR$/check_snmp_time.pl -H $HOSTADDRESS$ -C $SNMPCOMMUNITYREAD$ -f -w $ARG1$ -c $ARG2$
}




################################################################################
# application performance monitoring checks (end user experience) 
#===============================================================================
# Download:
# - Included in shinken. 
# This check is in alpha release and should be enabled with the following 
# installer command : ./install --enableeue
# This is based on cucumber (see http://cukes.info)
################################################################################

define command {
    command_name    check_eue
    command_line    /usr/bin/cucumber --format Eue::Shinken $PLUGINSDIR$/eue/$ARG1$.feature
    timeout         60
}


################################################################################
# Host_alive_checks
################################################################################

define command {
    command_name    check_host_alive
    command_line    $PLUGINSDIR$/check_ping -H $HOSTADDRESS$ -w 1000,100% -c 3000,100% -p 1
}



################################################################################
# Notification_commands
#===============================================================================
# Download:
# - notify-*-by-email:
#       Use 'printf' and 'mail' system tools. (you may need to update their
#       paths, ie. "/bin/mail" instead of "/usr/bin/mail").
# - notify-*-by-xmpp:
#       The Python script is in the libexec folder of the Shinken's sources.
#       It need the Python XMPP module.
#       On supported distributions, this addon can be installed and configured by
#           ./install -a notify_by_xmpp
# - notify-*-by-android-sms:
#       Use Shinken reactionner (see shinken-specific.cfg).
################################################################################

## Notify Host by Email
define command {
    command_name    notify-host-by-email
    command_line    /usr/bin/printf "%b" "Shinken Notification\n\nType:$NOTIFICATIONTYPE$\nHost: $HOSTNAME$\nState: $HOSTSTATE$\nAddress: $HOSTADDRESS$\nInfo: $HOSTOUTPUT$\nDate/Time: $DATE$ $TIME$\n" | /usr/bin/mail -s "Host $HOSTSTATE$ alert for $HOSTNAME$" $CONTACTEMAIL$
}

## Notify Service by Email
define command {
    command_name    notify-service-by-email
    command_line    /usr/bin/printf "%b" "Shinken Notification\n\nNotification Type: $NOTIFICATIONTYPE$\n\nService: $SERVICEDESC$\nHost: $HOSTNAME$\nAddress: $HOSTADDRESS$\nState: $SERVICESTATE$\n\nDate/Time: $DATE$ $TIME$\nAdditional Info : $SERVICEOUTPUT$\n" | /usr/bin/mail -s "** $NOTIFICATIONTYPE$ alert - $HOSTNAME$/$SERVICEDESC$ is $SERVICESTATE$ **" $CONTACTEMAIL$
}


## Notify Host by XMPP
define command {
    command_name    notify-host-by-xmpp
    command_line    $PLUGINSDIR$/notify_by_xmpp.py -a $PLUGINSDIR$/notify_by_xmpp.ini "Host '$HOSTNAME$' is $HOSTSTATE$ - Info : $HOSTOUTPUT$" $CONTACTEMAIL$
}

## Notify Service by XMPP
define command {
    command_name    notify-service-by-xmpp
    command_line    $PLUGINSDIR$/notify_by_xmpp.py -a $PLUGINSDIR$/notify_by_xmpp.ini "$NOTIFICATIONTYPE$ $HOSTNAME$ $SERVICEDESC$ $SERVICESTATE$ $SERVICEOUTPUT$ $LONGDATETIME$" $CONTACTEMAIL$
}


## Notify Host by SMS (through an Android phone)
# You need both reactionner_tag and module_type in most cases!
define command {
    command_name        notify-host-by-android-sms
    command_line        android_sms $CONTACTPAGER$ Host: $HOSTNAME$\nAddress: $HOSTADDRESS$\nState: $HOSTSTATE$\nInfo: $OUTPUT$\nDate: $DATETIME$
    reactionner_tag     android_sms
    module_type         android_sms
}

## Notify Service by SMS (through an Android phone)
# You need both reactionner_tag and module_type in most cases!
define command {
    command_name        notify-service-by-android-sms
    command_line        android_sms $CONTACTPAGER$ Service: $SERVICEDESC$\nHost: $HOSTNAME$\nAddress: $HOSTADDRESS$\nState: $SERVICESTATE$\nInfo: $OUTPUT$\nDate: $DATETIME$
    reactionner_tag     android_sms
    module_type         android_sms
}





################################################################################
# Skonf related commands (EXPERIMENTAL!)
#===============================================================================
define command {
    command_name        restart_shinken
    command_line        sudo /etc/init.d/shinken restart
}

define command {
    command_name        reload_shinken
    command_line        sudo /etc/init.d/shinken reload
}

define command {
    command_name        configuration_check
    command_line        sudo /etc/init.d/shinken check
}



