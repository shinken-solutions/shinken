# All windows commands are using the check_wmi_plus.pl plugin. Install it with the shinken.sh script.
# You will also need to update the _domainuser _domainpassword macros of your host if it's specific,
# or the defaults values in the etc/shinken/resources.cfg file for global ones.

# Will check all windows disks. -o means the perfdata will be whith E: and not names
# and -3 is for printong in output bad states first
define command {
       command_name	check_windows_disks
       command_line	$PLUGINSDIR$/check_wmi_plus.pl -H $HOSTADDRESS$ -u "$_HOSTDOMAINUSER$" -p "$_HOSTDOMAINPASSWORD$" -m checkdrivesize -a '.' -w 90 -c 95 -o 0 -3 0
}


# Will look for the $ARG1$ (check_windows_eventlogs!application for example) log for at least Severity Level "Warning", were
# recorded in the last 1 hours
define command {
       command_name     check_windows_eventlogs
       command_line     $PLUGINSDIR$/check_wmi_plus.pl -H $HOSTADDRESS$ -u "$_HOSTDOMAINUSER$" -p "$_HOSTDOMAINPASSWORD$" -m checkeventlog -a $ARG1$ -o 2 -3 1 -w 1 -c 2
}


# Look for a recent reboot
define command {
       command_name     check_windows_reboot
       command_line     $PLUGINSDIR$/check_wmi_plus.pl -H $HOSTADDRESS$ -u "$_HOSTDOMAINUSER$" -p "$_HOSTDOMAINPASSWORD$" -m checkuptime -w '5min:' -c '15min:'
}

# Look for the physical memory
define command {
       command_name     check_windows_physical_memory
       command_line     $PLUGINSDIR$/check_wmi_plus.pl -H $HOSTADDRESS$ -u "$_HOSTDOMAINUSER$" -p "$_HOSTDOMAINPASSWORD$" -m checkmem -w 80 -c 90
}

# And look for swap
define command {
       command_name     check_windows_swap
       command_line     $PLUGINSDIR$/check_wmi_plus.pl -H $HOSTADDRESS$ -u "$_HOSTDOMAINUSER$" -p "$_HOSTDOMAINPASSWORD$" -m checkpage -a auto
}


# Look for overall CPU
define command {
       command_name     check_windows_overall_cpu
       command_line     $PLUGINSDIR$/check_wmi_plus.pl -H $HOSTADDRESS$ -u "$_HOSTDOMAINUSER$" -p "$_HOSTDOMAINPASSWORD$" -m checkcpu -w 80 -c 90
}

# And for each CPU
define command {
       command_name     check_windows_each_cpu
       command_line     $PLUGINSDIR$/check_wmi_plus.pl -H $HOSTADDRESS$ -u "$_HOSTDOMAINUSER$" -p "$_HOSTDOMAINPASSWORD$" -m checkeachcpu -w 80 -c 90
}

# Somelike load average
# Check 20times as quick as possible
define command {
       command_name     check_windows_loadaverage
       command_line     $PLUGINSDIR$/check_wmi_plus.pl -H $HOSTADDRESS$ -u "$_HOSTDOMAINUSER$" -p "$_HOSTDOMAINPASSWORD$" -m checkcpuq  -w 10 -c 20 -a 20 -y 0
}


# Auto services are started
define command {
       command_name     check_windows_auto_services
       command_line     $PLUGINSDIR$/check_wmi_plus.pl -H $HOSTADDRESS$ -u "$_HOSTDOMAINUSER$" -p "$_HOSTDOMAINPASSWORD$" -m checkservice -a Auto -o '' -w 0 -c 1
}

# Will warn for a >25% CPU process
define command {
       command_name     check_windows_big_processes
       command_line     $PLUGINSDIR$/check_wmi_plus.pl -H $HOSTADDRESS$ -u "$_HOSTDOMAINUSER$" -p "$_HOSTDOMAINPASSWORD$" -m checkproc -s cpuabove -a '%' -w 25 -exc _AvgCPU=@0:2 --nodataexit 0 --nodatastring "No processes with high CPU found"
}


# Will warn for a >25% CPU process that we give it the name
# like check_windows_big_process!firefox
define command {
       command_name     check_windows_big_process
       command_line     $PLUGINSDIR$/check_wmi_plus.pl -H $HOSTADDRESS$ -u "$_HOSTDOMAINUSER$" -p "$_HOSTDOMAINPASSWORD$" -m checkproc -s cpu -a '$ARG1$'  --nodatamode
}

# Look for disks I/Os
define command {
       command_name     check_windows_disks_io
       command_line     $PLUGINSDIR$/check_wmi_plus.pl -H $HOSTADDRESS$ -u "$_HOSTDOMAINUSER$" -p "$_HOSTDOMAINPASSWORD$" -m checkio -s logical -a '%'
}

# Look for too much inactive TS sessions. 0 or 1 is ok, 2 or more is warning
define command {
       command_name     check_windows_inactive_ts_sessions
       command_line     $PLUGINSDIR$/check_wmi_plus.pl -H $HOSTADDRESS$ -u "$_HOSTDOMAINUSER$" -p "$_HOSTDOMAINPASSWORD$" -m checkts -s sessions2003 -w 'InactiveSessions=0:1'
}


# Check a windows share
define command {
       command_name     check_windows_share
       command_line     $PLUGINSDIR$/check_disk_smb -H $HOSTADDRESS$ -u "$_HOSTDOMAINUSERSHORT$" -p "$_HOSTDOMAINPASSWORD$" -W '$_HOSTDOMAIN$' -s '$ARG1$' -w $_HOSTSHARE_WARN$ -c $_HOSTSHARE_CRIT$
}


