# SQL Monitoring references
# http://technet.microsoft.com/en-us/library/ms190382.aspx
# http://www.quest.com/backstage/images/promotions/SQLServer-Perfmonance-Poster.pdf
# http://msdn.microsoft.com/en-us/library/ms191246.aspx
# 
# SQL Server uses WMI Classes:
#  Win32_PerfRawData_MSSQLSERVER_SQLSERVER*
#  Win32_PerfFormattedData_MSSQLSERVER_SQLSERVER*
# 
#----------------------------------------------------------
[checksql listdb]
requires=1.51
inihelp=<<EOT
List all DBs in a SQL Server database. This is just a helper check.

ARG1  (optional) Specify an non-default SQL Instance Name. You actually specify part of the WMI Class name but see below for more info. The default setting for this is MSSQLSERVER_SQLSERVER. If you specify this as "default" then the default value will be used. This can simplify your Nagios configuration by allowing you to have a single commmand definition.

Selecting an Instance:  
The WMI Class name is built up from the SQL instance name. For the default SQL Instance name, part of the WMI Class is MSSQLSERVER_SQLSERVER. For SQL Express the part of the WMI Class is MSSQLSQLEXPRESS_MSSQLSQLEXPRESS.
  
If you have an installation that uses a different SQL Instance name you'll have to work out the WMI Class Name and use that. Typically, if the SQL Instance is XXX then the WMI Class will be MSSQLXXX_MSSQLXXX. If you find a problem with this mapping please contact us.

Examples:  
   To select the default SQL Express Instance use -a MSSQLSQLEXPRESS_MSSQLSQLEXPRESS.
   To select a non-default SQL Instance called XXX use -a MSSQLXXX_MSSQLXXX.
EOT

query=SELECT Name FROM Win32_PerfRawData_MSSQLSERVER_SQLSERVERDatabases

# If ARG1 is used on the command line it is used to help form the instance name in the query
# It looks like the WMI class uses the SQL instance name 
# At the moment not sure on all the possible variants so we substitute all of the part that might be variable
# We'll leave the query set up by default to use the default instance name
# If an argument is set use that to replace the whole variable part
# treat MSSQLSERVER_SQLSERVER as the entire part of the WMI class name that is variable
# for SQL Express it is MSSQLSQLEXPRESS_MSSQLSQLEXPRESS
# for other instance names you'll have to work it out yourself
# now we have used the tricky regex so that you can specify -a default on the command line which simplifies the generic nagios config as you only need one command definition
queryextension=MSSQLSERVER_SQLSERVER|{_arg1}|_arg1|^((?!default).)*$|MSSQLSERVER_SQLSERVER


test=_ItemCount

predisplay=_DisplayMsg||Overall Status - |~| -||
predisplay=_ItemCount||Number of Databases||||. DB Names - 

#FIELD|UNITS|DISPLAY|SEP|DELIM|START|END
display=Name||~|~|||, 

#----------------------------------------------------------
[checksql general]
requires=1.51
inihelp=<<EOT
General SQL Server Statistics. Tested for Microsoft SQL Server 2008. Only tested on a low volume server.

ARG1  (optional) Specify an non-default SQL Instance Name. You actually specify part of the WMI Class name but see below for more info. The default setting for this is MSSQLSERVER_SQLSERVER. If you specify this as "default" then the default value will be used. This can simplify your Nagios configuration by allowing you to have a single commmand definition.

Selecting an Instance:  
The WMI Class name is built up from the SQL instance name. For the default SQL Instance name, part of the WMI Class is MSSQLSERVER_SQLSERVER. For SQL Express the part of the WMI Class is MSSQLSQLEXPRESS_MSSQLSQLEXPRESS.
  
If you have an installation that uses a different SQL Instance name you'll have to work out the WMI Class Name and use that. Typically, if the SQL Instance is XXX then the WMI Class will be MSSQLXXX_MSSQLXXX. If you find a problem with this mapping please contact us.

Examples:  
   To select the default SQL Express Instance use -a MSSQLSQLEXPRESS_MSSQLSQLEXPRESS.
   To select a non-default SQL Instance called XXX use -a MSSQLXXX_MSSQLXXX.
EOT

query=SELECT * FROM Win32_PerfRawData_MSSQLSERVER_SQLSERVERGeneralStatistics

# If ARG1 is used on the command line it is used to help form the instance name in the query
# It looks like the WMI class uses the SQL instance name 
# At the moment not sure on all the possible variants so we substitute all of the part that might be variable
# We'll leave the query set up by default to use the default instance name
# If an argument is set use that to replace the whole variable part
# treat MSSQLSERVER_SQLSERVER as the entire part of the WMI class name that is variable
# for SQL Express it is MSSQLSQLEXPRESS_MSSQLSQLEXPRESS
# for other instance names you'll have to work it out yourself
# now we have used the tricky regex so that you can specify -a default on the command line which simplifies the generic nagios config as you only need one command definition
queryextension=MSSQLSERVER_SQLSERVER|{_arg1}|_arg1|^((?!default).)*$|MSSQLSERVER_SQLSERVER

# run 2 WMI queries, 5 seconds apart
samples=2
delay=5

customfield=_LoginsPersec,PERF_COUNTER_COUNTER,LoginsPersec,%.0f
customfield=_LogoutsPersec,PERF_COUNTER_COUNTER,LogoutsPersec,%.0f
customfield=_TempTablesCreationRate,PERF_COUNTER_COUNTER,TempTablesCreationRate,%.0f

test=ActiveTempTables
test=_LoginsPersec
test=_LogoutsPersec
test=LogicalConnections
test=Processesblocked
test=_TempTablesCreationRate
test=UserConnections

display=_DisplayMsg||~|~| - ||
#FIELD|UNITS|DISPLAY|SEP|DELIM|START|END
display=ActiveTempTables|#
display=_LoginsPersec|#/sec
display=_LogoutsPersec|#/sec
display=LogicalConnections|#
display=Processesblocked|#
display=_TempTablesCreationRate|#/sec
display=UserConnections|#

perf=ActiveTempTables
perf=_LoginsPersec
perf=_LogoutsPersec
perf=LogicalConnections
perf=Processesblocked
perf=_TempTablesCreationRate
perf=UserConnections

#----------------------------------------------------------
#----------------------------------------------------------
#----------------------------------------------------------
[checksql buffermanager]
# adapted from the check written by cocoon <cocoon@crackz.ch>
requires=1.51
inihelp=<<EOT
Check SQL Server Buffer Manager. Tested for Microsoft SQL Server 2008.

ARG1  (optional) Specify an non-default SQL Instance Name. You actually specify part of the WMI Class name but see below for more info. The default setting for this is MSSQLSERVER_SQLSERVER. If you specify this as "default" then the default value will be used. This can simplify your Nagios configuration by allowing you to have a single commmand definition.

Selecting an Instance:  
The WMI Class name is built up from the SQL instance name. For the default SQL Instance name, part of the WMI Class is MSSQLSERVER_SQLSERVER. For SQL Express the part of the WMI Class is MSSQLSQLEXPRESS_MSSQLSQLEXPRESS.
  
If you have an installation that uses a different SQL Instance name you'll have to work out the WMI Class Name and use that. Typically, if the SQL Instance is XXX then the WMI Class will be MSSQLXXX_MSSQLXXX. If you find a problem with this mapping please contact us.

Examples:  
   To select the default SQL Express Instance use -a MSSQLSQLEXPRESS_MSSQLSQLEXPRESS.
   To select a non-default SQL Instance called XXX use -a MSSQLXXX_MSSQLXXX.
EOT

query=SELECT * FROM Win32_PerfRawData_MSSQLSERVER_SQLSERVERBufferManager

# If ARG1 is used on the command line it is used to help form the instance name in the query
# It looks like the WMI class uses the SQL instance name 
# At the moment not sure on all the possible variants so we substitute all of the part that might be variable
# We'll leave the query set up by default to use the default instance name
# If an argument is set use that to replace the whole variable part
# treat MSSQLSERVER_SQLSERVER as the entire part of the WMI class name that is variable
# for SQL Express it is MSSQLSQLEXPRESS_MSSQLSQLEXPRESS
# for other instance names you'll have to work it out yourself
# now we have used the tricky regex so that you can specify -a default on the command line which simplifies the generic nagios config as you only need one command definition
queryextension=MSSQLSERVER_SQLSERVER|{_arg1}|_arg1|^((?!default).)*$|MSSQLSERVER_SQLSERVER


# run 2 WMI queries, 5 seconds apart
samples=2
delay=5

customfield=_CheckpointpagesPersec,PERF_COUNTER_COUNTER,CheckpointpagesPersec,%.0f
customfield=_FreeliststallsPersec,PERF_COUNTER_COUNTER,FreeliststallsPersec,%.0f
customfield=_LazywritesPersec,PERF_COUNTER_COUNTER,LazywritesPersec,%.0f
customfield=_PagelookupsPersec,PERF_COUNTER_COUNTER,PagelookupsPersec,%.0f
customfield=_PagereadsPersec,PERF_COUNTER_COUNTER,PagereadsPersec,%.0f
customfield=_PagewritesPersec,PERF_COUNTER_COUNTER,PagewritesPersec,%.0f
customfield=_ReadaheadpagesPersec,PERF_COUNTER_COUNTER,ReadaheadpagesPersec,%.0f

test=Buffercachehitratio
test=_CheckpointpagesPersec
test=Databasepages
test=_FreeliststallsPersec
test=Freepages
test=_LazywritesPersec
test=Pagelifeexpectancy
test=_PagelookupsPersec
test=_PagereadsPersec
test=_PagewritesPersec
test=_ReadaheadpagesPersec
test=Reservedpages
test=Stolenpages
test=Targetpages
test=Totalpages

display=_DisplayMsg||~|~| - ||
display=Buffercachehitratio|#
display=_CheckpointpagesPersec|#/sec
display=Databasepages|#
display=_FreeliststallsPersec|#/sec
display=Freepages|#
display=_LazywritesPersec|#/sec
display=Pagelifeexpectancy
display=_PagelookupsPersec|#/sec
display=_PagereadsPersec|#/sec
display=_PagewritesPersec|#/sec
display=_ReadaheadpagesPersec|#/sec
display=Reservedpages|#
display=Stolenpages|#
display=Targetpages|#
display=Totalpages|#

perf=Buffercachehitratio
perf=_CheckpointpagesPersec
perf=Databasepages
perf=_FreeliststallsPersec
perf=Freepages
perf=_LazywritesPersec
perf=Pagelifeexpectancy
perf=_PagelookupsPersec
perf=_PagereadsPersec
perf=_PagewritesPersec
perf=_ReadaheadpagesPersec
perf=Reservedpages
perf=Stolenpages
perf=Targetpages
perf=Totalpages

#----------------------------------------------------------
[checksql latches]
requires=1.51
inihelp=<<EOT
SQL Server Latch and SuperLatch Statistics. Tested for Microsoft SQL Server 2008. Only tested on a low volume server.

ARG1  (optional) Specify an non-default SQL Instance Name. You actually specify part of the WMI Class name but see below for more info. The default setting for this is MSSQLSERVER_SQLSERVER. If you specify this as "default" then the default value will be used. This can simplify your Nagios configuration by allowing you to have a single commmand definition.

Selecting an Instance:  
The WMI Class name is built up from the SQL instance name. For the default SQL Instance name, part of the WMI Class is MSSQLSERVER_SQLSERVER. For SQL Express the part of the WMI Class is MSSQLSQLEXPRESS_MSSQLSQLEXPRESS.
  
If you have an installation that uses a different SQL Instance name you'll have to work out the WMI Class Name and use that. Typically, if the SQL Instance is XXX then the WMI Class will be MSSQLXXX_MSSQLXXX. If you find a problem with this mapping please contact us.

Examples:  
   To select the default SQL Express Instance use -a MSSQLSQLEXPRESS_MSSQLSQLEXPRESS.
   To select a non-default SQL Instance called XXX use -a MSSQLXXX_MSSQLXXX.
EOT

query=SELECT * FROM Win32_PerfRawData_MSSQLSERVER_SQLSERVERLatches

# If ARG1 is used on the command line it is used to help form the instance name in the query
# It looks like the WMI class uses the SQL instance name 
# At the moment not sure on all the possible variants so we substitute all of the part that might be variable
# We'll leave the query set up by default to use the default instance name
# If an argument is set use that to replace the whole variable part
# treat MSSQLSERVER_SQLSERVER as the entire part of the WMI class name that is variable
# for SQL Express it is MSSQLSQLEXPRESS_MSSQLSQLEXPRESS
# for other instance names you'll have to work it out yourself
# now we have used the tricky regex so that you can specify -a default on the command line which simplifies the generic nagios config as you only need one command definition
queryextension=MSSQLSERVER_SQLSERVER|{_arg1}|_arg1|^((?!default).)*$|MSSQLSERVER_SQLSERVER


# run 2 WMI queries, 5 seconds apart
samples=2
delay=5

customfield=_LatchWaitsPersec,PERF_COUNTER_COUNTER,LatchWaitsPersec,%.0f
customfield=_SuperLatchDemotionsPersec,PERF_COUNTER_COUNTER,SuperLatchDemotionsPersec,%.0f
customfield=_SuperLatchPromotionsPersec,PERF_COUNTER_COUNTER,SuperLatchPromotionsPersec,%.0f

test=AverageLatchWaitTimems
test=_LatchWaitsPersec
test=NumberofSuperLatches
test=_SuperLatchDemotionsPersec
test=_SuperLatchPromotionsPersec
test=TotalLatchWaitTimems

display=_DisplayMsg||~|~| - ||
#FIELD|UNITS|DISPLAY|SEP|DELIM|START|END
display=AverageLatchWaitTimems|ms
display=_LatchWaitsPersec
display=NumberofSuperLatches|#
display=_SuperLatchDemotionsPersec|#/sec
display=_SuperLatchPromotionsPersec|#/sec
display=TotalLatchWaitTimems|ms

perf=AverageLatchWaitTimems|ms
perf=_LatchWaitsPersec
perf=NumberofSuperLatches
perf=_SuperLatchDemotionsPersec
perf=_SuperLatchPromotionsPersec
perf=TotalLatchWaitTimems|ms

#----------------------------------------------------------
[checksql listlocks]
requires=1.51
inihelp=<<EOT
List all lock types in a SQL Server instance. This is just a helper check.

ARG1  (optional) Specify an non-default SQL Instance Name. You actually specify part of the WMI Class name but see below for more info. The default setting for this is MSSQLSERVER_SQLSERVER. If you specify this as "default" then the default value will be used. This can simplify your Nagios configuration by allowing you to have a single commmand definition.

Selecting an Instance:  
The WMI Class name is built up from the SQL instance name. For the default SQL Instance name, part of the WMI Class is MSSQLSERVER_SQLSERVER. For SQL Express the part of the WMI Class is MSSQLSQLEXPRESS_MSSQLSQLEXPRESS.
  
If you have an installation that uses a different SQL Instance name you'll have to work out the WMI Class Name and use that. Typically, if the SQL Instance is XXX then the WMI Class will be MSSQLXXX_MSSQLXXX. If you find a problem with this mapping please contact us.

Examples:  
   To select the default SQL Express Instance use -a MSSQLSQLEXPRESS_MSSQLSQLEXPRESS.
   To select a non-default SQL Instance called XXX use -a MSSQLXXX_MSSQLXXX.
EOT

query=SELECT Name FROM Win32_PerfRawData_MSSQLSERVER_SQLSERVERLocks

# If ARG1 is used on the command line it is used to help form the instance name in the query
# It looks like the WMI class uses the SQL instance name 
# At the moment not sure on all the possible variants so we substitute all of the part that might be variable
# We'll leave the query set up by default to use the default instance name
# If an argument is set use that to replace the whole variable part
# treat MSSQLSERVER_SQLSERVER as the entire part of the WMI class name that is variable
# for SQL Express it is MSSQLSQLEXPRESS_MSSQLSQLEXPRESS
# for other instance names you'll have to work it out yourself
# now we have used the tricky regex so that you can specify -a default on the command line which simplifies the generic nagios config as you only need one command definition
queryextension=MSSQLSERVER_SQLSERVER|{_arg1}|_arg1|^((?!default).)*$|MSSQLSERVER_SQLSERVER


predisplay=_ItemCount||Number of Lock Types||||. Lock Types - 

#FIELD|UNITS|DISPLAY|SEP|DELIM|START|END
display=Name||~|~|||, 

#----------------------------------------------------------
[checksql locks]
requires=1.51
inihelp=<<EOT
SQL Server Lock Statistics. Tested for Microsoft SQL Server 2008. Only tested on a low volume server.
ARG1  (optional) Specify an non-default SQL Instance Name. You actually specify part of the WMI Class name but see below for more info. The default setting for this is MSSQLSERVER_SQLSERVER. If you specify this as "default" then the default value will be used. This can simplify your Nagios configuration by allowing you to have a single commmand definition.

Selecting an Instance:  
The WMI Class name is built up from the SQL instance name. For the default SQL Instance name, part of the WMI Class is MSSQLSERVER_SQLSERVER. For SQL Express the part of the WMI Class is MSSQLSQLEXPRESS_MSSQLSQLEXPRESS.
  
If you have an installation that uses a different SQL Instance name you'll have to work out the WMI Class Name and use that. Typically, if the SQL Instance is XXX then the WMI Class will be MSSQLXXX_MSSQLXXX. If you find a problem with this mapping please contact us.

Examples:  
   To select the default SQL Express Instance use -a MSSQLSQLEXPRESS_MSSQLSQLEXPRESS.
   To select a non-default SQL Instance called XXX use -a MSSQLXXX_MSSQLXXX.
EOT

query=SELECT * FROM Win32_PerfRawData_MSSQLSERVER_SQLSERVERLocks where Name LIKE "{_arg2}"

# If ARG1 is used on the command line it is used to help form the instance name in the query
# It looks like the WMI class uses the SQL instance name 
# At the moment not sure on all the possible variants so we substitute all of the part that might be variable
# We'll leave the query set up by default to use the default instance name
# If an argument is set use that to replace the whole variable part
# treat MSSQLSERVER_SQLSERVER as the entire part of the WMI class name that is variable
# for SQL Express it is MSSQLSQLEXPRESS_MSSQLSQLEXPRESS
# for other instance names you'll have to work it out yourself
# now we have used the tricky regex so that you can specify -a default on the command line which simplifies the generic nagios config as you only need one command definition
queryextension=MSSQLSERVER_SQLSERVER|{_arg1}|_arg1|^((?!default).)*$|MSSQLSERVER_SQLSERVER

# use a query extension to specify a default value for ARG2
# also use the word default for _Total
queryextension={_arg2}|{_arg2}|_arg2|^((?!default).)*$|_Total

# run 2 WMI queries, 5 seconds apart
samples=2
delay=5

customfield=_LockRequestsPersec,PERF_COUNTER_COUNTER,LockRequestsPersec,%.0f
customfield=_LockTimeoutstimeout0Persec,PERF_COUNTER_COUNTER,LockTimeoutstimeout0Persec,%.0f
customfield=_LockWaitsPersec,PERF_COUNTER_COUNTER,LockWaitsPersec,%.0f
customfield=_NumberofDeadlocksPersec,PERF_COUNTER_COUNTER,NumberofDeadlocksPersec,%.0f

test=AverageWaitTimems
test=_LockRequestsPersec
test=_LockTimeoutstimeout0Persec
test=_LockWaitsPersec
test=LockWaitTimems
test=_NumberofDeadlocksPersec

# will show the overall status
predisplay=_DisplayMsg||Overall Status - |~| - ||

#FIELD|UNITS|DISPLAY|SEP|DELIM|START|END
# will show the status of each item returned
display=Name||Lock Type |~|~|| 
display=_DisplayMsg||~|~| - |(|)
display=AverageWaitTimems|ms
display=_LockRequestsPersec|#/sec
display=_LockTimeoutstimeout0Persec|#/sec
display=_LockWaitsPersec|#/sec
display=LockWaitTimems|ms
display=_NumberofDeadlocksPersec|#/sec|||||.  

perf=AverageWaitTimems|ms
perf=_LockRequestsPersec
perf=_LockTimeoutstimeout0Persec
perf=_LockWaitsPersec
perf=LockWaitTimems|ms
perf=_NumberofDeadlocksPersec

#----------------------------------------------------------
[checksql sqlstats]
requires=1.51
inihelp=<<EOT
SQL Server SQL Statistics. Tested for Microsoft SQL Server 2008. Only tested on a low volume server.

ARG1  (optional) Specify an non-default SQL Instance Name. You actually specify part of the WMI Class name but see below for more info. The default setting for this is MSSQLSERVER_SQLSERVER. If you specify this as "default" then the default value will be used. This can simplify your Nagios configuration by allowing you to have a single commmand definition.

Selecting an Instance:  
The WMI Class name is built up from the SQL instance name. For the default SQL Instance name, part of the WMI Class is MSSQLSERVER_SQLSERVER. For SQL Express the part of the WMI Class is MSSQLSQLEXPRESS_MSSQLSQLEXPRESS.
  
If you have an installation that uses a different SQL Instance name you'll have to work out the WMI Class Name and use that. Typically, if the SQL Instance is XXX then the WMI Class will be MSSQLXXX_MSSQLXXX. If you find a problem with this mapping please contact us.

Examples:  
   To select the default SQL Express Instance use -a MSSQLSQLEXPRESS_MSSQLSQLEXPRESS.
   To select a non-default SQL Instance called XXX use -a MSSQLXXX_MSSQLXXX.
EOT

query=SELECT * FROM Win32_PerfRawData_MSSQLSERVER_SQLSERVERSQLStatistics

# If ARG1 is used on the command line it is used to help form the instance name in the query
# It looks like the WMI class uses the SQL instance name 
# At the moment not sure on all the possible variants so we substitute all of the part that might be variable
# We'll leave the query set up by default to use the default instance name
# If an argument is set use that to replace the whole variable part
# treat MSSQLSERVER_SQLSERVER as the entire part of the WMI class name that is variable
# for SQL Express it is MSSQLSQLEXPRESS_MSSQLSQLEXPRESS
# for other instance names you'll have to work it out yourself
# now we have used the tricky regex so that you can specify -a default on the command line which simplifies the generic nagios config as you only need one command definition
queryextension=MSSQLSERVER_SQLSERVER|{_arg1}|_arg1|^((?!default).)*$|MSSQLSERVER_SQLSERVER


# run 2 WMI queries, 5 seconds apart
samples=2
delay=5

customfield=_BatchRequestsPersec,PERF_COUNTER_COUNTER,BatchRequestsPersec,%.0f
customfield=_FailedAutoParamsPersec,PERF_COUNTER_COUNTER,FailedAutoParamsPersec,%.0f
customfield=_ForcedParameterizationsPersec,PERF_COUNTER_COUNTER,ForcedParameterizationsPersec,%.0f
customfield=_GuidedplanexecutionsPersec,PERF_COUNTER_COUNTER,GuidedplanexecutionsPersec,%.0f
customfield=_MisguidedplanexecutionsPersec,PERF_COUNTER_COUNTER,MisguidedplanexecutionsPersec,%.0f
customfield=_SafeAutoParamsPersec,PERF_COUNTER_COUNTER,SafeAutoParamsPersec,%.0f
customfield=_SQLAttentionrate,PERF_COUNTER_COUNTER,SQLAttentionrate,%.0f
customfield=_SQLCompilationsPersec,PERF_COUNTER_COUNTER,SQLCompilationsPersec,%.0f
customfield=_SQLReCompilationsPersec,PERF_COUNTER_COUNTER,SQLReCompilationsPersec,%.0f
customfield=_UnsafeAutoParamsPersec,PERF_COUNTER_COUNTER,UnsafeAutoParamsPersec,%.0f

test=_BatchRequestsPersec
test=_FailedAutoParamsPersec
test=_ForcedParameterizationsPersec
test=_GuidedplanexecutionsPersec
test=_MisguidedplanexecutionsPersec
test=_SafeAutoParamsPersec
test=_SQLAttentionrate
test=_SQLCompilationsPersec
test=_SQLReCompilationsPersec
test=_UnsafeAutoParamsPersec

display=_DisplayMsg||~|~| - ||
#FIELD|UNITS|DISPLAY|SEP|DELIM|START|END
display=_BatchRequestsPersec|#/sec
display=_FailedAutoParamsPersec|#/sec
display=_ForcedParameterizationsPersec|#/sec
display=_GuidedplanexecutionsPersec|#/sec
display=_MisguidedplanexecutionsPersec|#/sec
display=_SafeAutoParamsPersec|#/sec
display=_SQLAttentionrate|#/sec
display=_SQLCompilationsPersec|#/sec
display=_SQLReCompilationsPersec|#/sec
display=_UnsafeAutoParamsPersec|#/sec

perf=_BatchRequestsPersec
perf=_FailedAutoParamsPersec
perf=_ForcedParameterizationsPersec
perf=_GuidedplanexecutionsPersec
perf=_MisguidedplanexecutionsPersec
perf=_SafeAutoParamsPersec
perf=_SQLAttentionrate
perf=_SQLCompilationsPersec
perf=_SQLReCompilationsPersec
perf=_UnsafeAutoParamsPersec

#----------------------------------------------------------
[checksql waits]
requires=1.51
inihelp=<<EOT
SQL Server Wait Statistics. This only shows Average Wait time in milliseconds. You could modify this check to show other wait types eg Waits in Progress. Tested for Microsoft SQL Server 2008. Only tested on a low volume server.

ARG1  (optional) Specify an non-default SQL Instance Name. You actually specify part of the WMI Class name but see below for more info. The default setting for this is MSSQLSERVER_SQLSERVER. If you specify this as "default" then the default value will be used. This can simplify your Nagios configuration by allowing you to have a single commmand definition.

Selecting an Instance:  
The WMI Class name is built up from the SQL instance name. For the default SQL Instance name, part of the WMI Class is MSSQLSERVER_SQLSERVER. For SQL Express the part of the WMI Class is MSSQLSQLEXPRESS_MSSQLSQLEXPRESS.
  
If you have an installation that uses a different SQL Instance name you'll have to work out the WMI Class Name and use that. Typically, if the SQL Instance is XXX then the WMI Class will be MSSQLXXX_MSSQLXXX. If you find a problem with this mapping please contact us.

Examples:  
   To select the default SQL Express Instance use -a MSSQLSQLEXPRESS_MSSQLSQLEXPRESS.
   To select a non-default SQL Instance called XXX use -a MSSQLXXX_MSSQLXXX.
EOT

query=SELECT * FROM Win32_PerfFormattedData_MSSQLSERVER_SQLSERVERWaitStatistics where Name = "Average wait time (ms)"

# If ARG1 is used on the command line it is used to help form the instance name in the query
# It looks like the WMI class uses the SQL instance name 
# At the moment not sure on all the possible variants so we substitute all of the part that might be variable
# We'll leave the query set up by default to use the default instance name
# If an argument is set use that to replace the whole variable part
# treat MSSQLSERVER_SQLSERVER as the entire part of the WMI class name that is variable
# for SQL Express it is MSSQLSQLEXPRESS_MSSQLSQLEXPRESS
# for other instance names you'll have to work it out yourself
# now we have used the tricky regex so that you can specify -a default on the command line which simplifies the generic nagios config as you only need one command definition
queryextension=MSSQLSERVER_SQLSERVER|{_arg1}|_arg1|^((?!default).)*$|MSSQLSERVER_SQLSERVER


test=Lockwaits
test=Logbufferwaits
test=Logwritewaits
test=Memorygrantqueuewaits
test=NetworkIOwaits
test=NonPagelatchwaits
test=PageIOlatchwaits
test=Pagelatchwaits
test=Threadsafememoryobjectswaits
test=Transactionownershipwaits
test=Waitfortheworker
test=Workspacesynchronizationwaits

display=_DisplayMsg||~|~| - ||
#FIELD|UNITS|DISPLAY|SEP|DELIM|START|END
display=Name||~|~|~|| - 
display=Lockwaits|ms
display=Logbufferwaits|ms
display=Logwritewaits|ms
display=Memorygrantqueuewaits|ms
display=NetworkIOwaits|ms
display=NonPagelatchwaits|ms
display=PageIOlatchwaits|ms
display=Pagelatchwaits|ms
display=Threadsafememoryobjectswaits|ms
display=Transactionownershipwaits|ms
display=Waitfortheworker|ms
display=Workspacesynchronizationwaits|ms

perf=Lockwaits|ms
perf=Logbufferwaits|ms
perf=Logwritewaits|ms
perf=Memorygrantqueuewaits|ms
perf=NetworkIOwaits|ms
perf=NonPagelatchwaits|ms
perf=PageIOlatchwaits|ms
perf=Pagelatchwaits|ms
perf=Threadsafememoryobjectswaits|ms
perf=Transactionownershipwaits|ms
perf=Waitfortheworker|ms
perf=Workspacesynchronizationwaits|ms

#----------------------------------------------------------
[checksql memory]
requires=1.51
inihelp=<<EOT
SQL Server Memory Statistics. Tested for Microsoft SQL Server 2008. Only tested on a low volume server.

ARG1  (optional) Specify an non-default SQL Instance Name. You actually specify part of the WMI Class name but see below for more info. The default setting for this is MSSQLSERVER_SQLSERVER. If you specify this as "default" then the default value will be used. This can simplify your Nagios configuration by allowing you to have a single commmand definition.

Selecting an Instance:  
The WMI Class name is built up from the SQL instance name. For the default SQL Instance name, part of the WMI Class is MSSQLSERVER_SQLSERVER. For SQL Express the part of the WMI Class is MSSQLSQLEXPRESS_MSSQLSQLEXPRESS.
  
If you have an installation that uses a different SQL Instance name you'll have to work out the WMI Class Name and use that. Typically, if the SQL Instance is XXX then the WMI Class will be MSSQLXXX_MSSQLXXX. If you find a problem with this mapping please contact us.

Examples:  
   To select the default SQL Express Instance use -a MSSQLSQLEXPRESS_MSSQLSQLEXPRESS.
   To select a non-default SQL Instance called XXX use -a MSSQLXXX_MSSQLXXX.
EOT

query=SELECT * FROM Win32_PerfFormattedData_MSSQLSERVER_SQLSERVERMemoryManager

# If ARG1 is used on the command line it is used to help form the instance name in the query
# It looks like the WMI class uses the SQL instance name 
# At the moment not sure on all the possible variants so we substitute all of the part that might be variable
# We'll leave the query set up by default to use the default instance name
# If an argument is set use that to replace the whole variable part
# treat MSSQLSERVER_SQLSERVER as the entire part of the WMI class name that is variable
# for SQL Express it is MSSQLSQLEXPRESS_MSSQLSQLEXPRESS
# for other instance names you'll have to work it out yourself
# now we have used the tricky regex so that you can specify -a default on the command line which simplifies the generic nagios config as you only need one command definition
queryextension=MSSQLSERVER_SQLSERVER|{_arg1}|_arg1|^((?!default).)*$|MSSQLSERVER_SQLSERVER


customfield=_ConnectionMemory,KBtoB,ConnectionMemoryKB,%.0f
customfield=_LockMemory,KBtoB,LockMemoryKB,%.0f
customfield=_MaximumWorkspaceMemory,KBtoB,MaximumWorkspaceMemoryKB,%.0f
customfield=_OptimizerMemory,KBtoB,OptimizerMemoryKB,%.0f
customfield=_SQLCacheMemory,KBtoB,SQLCacheMemoryKB,%.0f
customfield=_TargetServerMemory,KBtoB,TargetServerMemoryKB,%.0f
customfield=_TotalServerMemory,KBtoB,TotalServerMemoryKB,%.0f


test=_ConnectionMemory
test=LockBlocks
test=LockBlocksAllocated
test=_LockMemory
test=LockOwnerBlocks
test=LockOwnerBlocksAllocated
test=_MaximumWorkspaceMemory
test=MemoryGrantsOutstanding
test=MemoryGrantsPending
test=_OptimizerMemory
test=_SQLCacheMemory
test=_TargetServerMemory
test=_TotalServerMemory

display=_DisplayMsg||~|~| - ||
#FIELD|UNITS|DISPLAY|SEP|DELIM|START|END
display=_ConnectionMemory|#bytes
display=LockBlocks|#
display=LockBlocksAllocated|#
display=_LockMemory|#bytes
display=LockOwnerBlocks|#
display=LockOwnerBlocksAllocated
display=_MaximumWorkspaceMemory|#bytes
display=MemoryGrantsOutstanding|#
display=MemoryGrantsPending|#
display=_OptimizerMemory|#bytes
display=_SQLCacheMemory|#bytes
display=_TargetServerMemory|#bytes
display=_TotalServerMemory|#bytes

perf=_ConnectionMemory|bytes
perf=LockBlocks
perf=LockBlocksAllocated
perf=_LockMemory|bytes
perf=LockOwnerBlocks
perf=LockOwnerBlocksAllocated
perf=_MaximumWorkspaceMemory|bytes
perf=MemoryGrantsOutstanding
perf=MemoryGrantsPending
perf=_OptimizerMemory|bytes
perf=_SQLCacheMemory|bytes
perf=_TargetServerMemory|bytes
perf=_TotalServerMemory|bytes


#----------------------------------------------------------
[checksql listcache]
requires=1.51
inihelp=<<EOT
List all cache types in a SQL Server instance. This is just a helper check.

ARG1  (optional) Specify an non-default SQL Instance Name. You actually specify part of the WMI Class name but see below for more info. The default setting for this is MSSQLSERVER_SQLSERVER. If you specify this as "default" then the default value will be used. This can simplify your Nagios configuration by allowing you to have a single commmand definition.

Selecting an Instance:  
The WMI Class name is built up from the SQL instance name. For the default SQL Instance name, part of the WMI Class is MSSQLSERVER_SQLSERVER. For SQL Express the part of the WMI Class is MSSQLSQLEXPRESS_MSSQLSQLEXPRESS.
  
If you have an installation that uses a different SQL Instance name you'll have to work out the WMI Class Name and use that. Typically, if the SQL Instance is XXX then the WMI Class will be MSSQLXXX_MSSQLXXX. If you find a problem with this mapping please contact us.

Examples:  
   To select the default SQL Express Instance use -a MSSQLSQLEXPRESS_MSSQLSQLEXPRESS.
   To select a non-default SQL Instance called XXX use -a MSSQLXXX_MSSQLXXX.
EOT

query=SELECT Name FROM Win32_PerfRawData_MSSQLSERVER_SQLSERVERPlanCache

# If ARG1 is used on the command line it is used to help form the instance name in the query
# It looks like the WMI class uses the SQL instance name 
# At the moment not sure on all the possible variants so we substitute all of the part that might be variable
# We'll leave the query set up by default to use the default instance name
# If an argument is set use that to replace the whole variable part
# treat MSSQLSERVER_SQLSERVER as the entire part of the WMI class name that is variable
# for SQL Express it is MSSQLSQLEXPRESS_MSSQLSQLEXPRESS
# for other instance names you'll have to work it out yourself
# now we have used the tricky regex so that you can specify -a default on the command line which simplifies the generic nagios config as you only need one command definition
queryextension=MSSQLSERVER_SQLSERVER|{_arg1}|_arg1|^((?!default).)*$|MSSQLSERVER_SQLSERVER


predisplay=_ItemCount||Number of Cache Types||||. Cache Types - 

#FIELD|UNITS|DISPLAY|SEP|DELIM|START|END
display=Name||~|~|||, 

#----------------------------------------------------------
[checksql cache]
requires=1.51
inihelp=<<EOT
SQL Server Cache Statistics. Tested for Microsoft SQL Server 2008. Only tested on a low volume server.
ARG1  (optional) Specify an non-default SQL Instance Name. You actually specify part of the WMI Class name but see below for more info. The default setting for this is MSSQLSERVER_SQLSERVER. If you specify this as "default" then the default value will be used. This can simplify your Nagios configuration by allowing you to have a single commmand definition.

Selecting an Instance:  
The WMI Class name is built up from the SQL instance name. For the default SQL Instance name, part of the WMI Class is MSSQLSERVER_SQLSERVER. For SQL Express the part of the WMI Class is MSSQLSQLEXPRESS_MSSQLSQLEXPRESS.
  
If you have an installation that uses a different SQL Instance name you'll have to work out the WMI Class Name and use that. Typically, if the SQL Instance is XXX then the WMI Class will be MSSQLXXX_MSSQLXXX. If you find a problem with this mapping please contact us.

Examples:  
   To select the default SQL Express Instance use -a MSSQLSQLEXPRESS_MSSQLSQLEXPRESS.
   To select a non-default SQL Instance called XXX use -a MSSQLXXX_MSSQLXXX.
EOT

query=SELECT * FROM Win32_PerfFormattedData_MSSQLSERVER_SQLSERVERPlanCache where Name LIKE "{_arg2}"

# If ARG1 is used on the command line it is used to help form the instance name in the query
# It looks like the WMI class uses the SQL instance name 
# At the moment not sure on all the possible variants so we substitute all of the part that might be variable
# We'll leave the query set up by default to use the default instance name
# If an argument is set use that to replace the whole variable part
# treat MSSQLSERVER_SQLSERVER as the entire part of the WMI class name that is variable
# for SQL Express it is MSSQLSQLEXPRESS_MSSQLSQLEXPRESS
# for other instance names you'll have to work it out yourself
# now we have used the tricky regex so that you can specify -a default on the command line which simplifies the generic nagios config as you only need one command definition
queryextension=MSSQLSERVER_SQLSERVER|{_arg1}|_arg1|^((?!default).)*$|MSSQLSERVER_SQLSERVER

# use a query extension to specify a default value for ARG2
# also use the word default for _Total
queryextension={_arg2}|{_arg2}|_arg2|^((?!default).)*$|_Total

test=CacheHitRatio
test=CacheObjectCounts
test=CacheObjectsinuse
test=CachePages

# will show the overall status
predisplay=_DisplayMsg||Overall Status - |~| - ||

#FIELD|UNITS|DISPLAY|SEP|DELIM|START|END
# will show the status of each item returned
display=Name||Cache Type |~|~|| 
display=_DisplayMsg||~|~| - |(|)
display=CacheHitRatio
display=CacheObjectCounts
display=CacheObjectsinuse
display=CachePages|pages|CachePages|||| (Each Page is 8k).  

perf=CacheHitRatio
perf=CacheObjectCounts
perf=CacheObjectsinuse
perf=CachePages|pages
